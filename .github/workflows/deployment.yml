name: Deploy Next.js site to Pages
on:
  push:
    branches: [main]
permissions:
  contents: read
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: npm ci --no-audit
      - name: Build the project
        run: npm run build
      - name: Prepare deployment artifact
        run: zip -q -r app.zip .
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Upload artifact to S3
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          COMMIT_SHA=${{ github.sha }}
          FILE_NAME=app-$TIMESTAMP-$COMMIT_SHA.zip
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
          aws s3 cp --quiet app.zip s3://demo-next-bucket/$FILE_NAME
      - name: Copy latest version to S3
        run: |
          aws s3 cp --quiet app.zip s3://demo-next-bucket/app_latest.zip
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Trigger CodeDeploy deployment
        run: |
          aws deploy create-deployment \
            --application-name DemoNextApplication \
            --deployment-group-name ProductionDeployment \
            --s3-location bucket=demo-next-bucket,key=${{ env.FILE_NAME }},bundleType=zip
